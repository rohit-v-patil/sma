{"version":3,"sources":["components/Navbar.js","components/Home.js","components/ServerCard.js","components/Hosts.js","components/ServerNameCard.js","components/Services.js","components/Analytics.js","components/About.js","components/ServerDetails.js","App.js","serviceWorker.js","index.js"],"names":["Navbar","state","handleItemClick","e","name","setState","activeItem","this","Menu","pointing","secondary","size","Item","as","NavLink","to","src","header","position","color","active","Icon","Component","Home","Segment","inverted","style","height","Grid","centered","columns","stackable","Row","Column","ServerCard","props","services","services_data","data","Object","keys","map","key","Table","Cell","plugin_output","Modal","trigger","Card","href","Content","Header","hostname","Description","extra","Label","circular","floating","content","celled","striped","HeaderCell","colSpan","host_data","host_name","Body","actions","positive","Hosts","hosts","loading","failed","error","getData","bind","axios","get","then","response","catch","setInterval","state_type","d1","value","padded","Message","negative","icon","iframe_url","service_desc","ServerNameCard","service_description","split","join","width","frameborder","Services","Analytics","About","ServerDetails","location","App","className","exact","path","component","Boolean","window","match","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.1ee04702.chunk.js","sourcesContent":["import React, { Component } from 'react';\r\nimport {NavLink} from 'react-router-dom';\r\nimport { Menu,Icon } from 'semantic-ui-react';\r\n\r\nclass Navbar extends Component {\r\n  state = {}\r\n\r\n  handleItemClick = (e, { name }) => this.setState({ activeItem: name })\r\n\r\n  render() {\r\n    const { activeItem } = this.state\r\n\r\n    return (\r\n      <Menu pointing secondary size='massive'>\r\n\r\n        <Menu.Item as={NavLink} to='/'>\r\n          <img src='https://www.bemlindia.in/images/logo_beml1.png'/>\r\n          \r\n        </Menu.Item>\r\n\r\n        <Menu.Item header\r\n        name='Bharat Earth Movers Limited'\r\n        >Bharat Earth Movers Ltd.</Menu.Item>\r\n\r\n        <Menu.Menu position='left'>\r\n            <Menu.Item as={NavLink} to='Hosts' color='red'\r\n            name='Hosts'\r\n            active={activeItem === 'Hosts'}\r\n            >\r\n              <Icon name='server'/>Hosts\r\n            </Menu.Item>\r\n            <Menu.Item as={NavLink} to='Services' color='green'\r\n            name='Services'\r\n            active={activeItem === 'Services'}\r\n            />\r\n            <Menu.Item as={NavLink} to='Analytics' color='blue'\r\n            name='Analytics'\r\n            active={activeItem === 'Analytics'}\r\n            />\r\n        </Menu.Menu>\r\n\r\n        <Menu.Menu position='right'>\r\n\r\n            <Menu.Item as={NavLink} to='About' color='blue'\r\n            name='About'\r\n            active={activeItem === 'About'}\r\n            />\r\n            \r\n        </Menu.Menu>\r\n\r\n      </Menu>\r\n    )\r\n  }\r\n}\r\nexport default Navbar;","import React, { Component } from 'react';\r\nimport {Segment, Grid} from 'semantic-ui-react';\r\n\r\nclass Home extends Component{\r\n    render(){\r\n        return(\r\n            <Segment size='massive' inverted color='black' style={{height: '100vh'}}>\r\n                <Grid centered columns={3} stackable>\r\n                    <Grid.Row style={{height: '20vh'}}>\r\n                        <Grid.Column></Grid.Column>\r\n                    </Grid.Row>\r\n                    \r\n                    <Grid.Row>\r\n                    \r\n                        \r\n                        <Segment size='massive'color='blue' inverted>\r\n                        Bharat Earth Movers Ltd.\r\n                        <br/><br/>\r\n                        Server Monitoring and Analysis\r\n                        </Segment>\r\n                        \r\n                    </Grid.Row>\r\n                    <Grid.Row>\r\n                        \r\n                        \r\n                    \r\n                    </Grid.Row>\r\n                </Grid>\r\n            </Segment>\r\n        );\r\n    }\r\n}\r\nexport default Home;","import React from 'react';\r\nimport {Card,Label,Table,Modal} from 'semantic-ui-react';\r\nimport {Link} from 'react-router-dom';\r\n\r\nconst ServerCard = props => {\r\n  const services = props.services_data;\r\n        const data = Object.keys(services).map((key) => (\r\n            \r\n            <Table.Row>\r\n                <Table.Cell>{key}</Table.Cell>\r\n                <Table.Cell>{services[key].plugin_output}</Table.Cell>\r\n            </Table.Row>\r\n            ));\r\n\r\n    return(\r\n        \r\n\r\n        <Modal\r\n            trigger={\r\n              <Card color={props.color} href>\r\n                <Card.Content>\r\n                  <Card.Header>{props.hostname}</Card.Header>\r\n                  <Card.Description>\r\n                    {props.plugin_output}\r\n                  </Card.Description>\r\n                  </Card.Content>\r\n                  <Card.Content extra>\r\n                    <Label color={props.color} circular floating>\r\n                        {props.state}\r\n                    </Label>\r\n                </Card.Content>\r\n            </Card>\r\n            }\r\n            header={props.hostname}\r\n            content={\r\n            <Table celled striped>\r\n              <Table.Header>\r\n                  <Table.Row>\r\n                      <Table.HeaderCell colSpan='3'>\r\n                          {props.host_data.host_name} Services\r\n                      </Table.HeaderCell>\r\n                  </Table.Row>\r\n                  \r\n              </Table.Header>\r\n              <Table.Body>\r\n                {data}\r\n              </Table.Body>\r\n          </Table>\r\n          }\r\n            actions={[{ key: 'done', content: 'Done', positive: true }]}\r\n          />\r\n        \r\n        \r\n    );\r\n}\r\n\r\nexport default ServerCard;","import React, { Component } from 'react';\r\nimport axios from 'axios';\r\nimport {Message,Grid,Icon } from 'semantic-ui-react';\r\nimport ServerCard from './ServerCard';\r\n\r\n//const API_URL = 'http://3.225.245.176/status.php';\r\nconst API_URL = 'https://rohit1727.github.io/server_log/status.json';\r\nconst AuthStr = 'Bearer eyJrIjoiT1hjbDl5TnFQaXRGNzNDYjZjSHozR09qQUhUOTZDM1EiLCJuIjoibmFnaW9zIiwiaWQiOjF9';\r\n\r\nclass Hosts extends Component{\r\n  constructor(){\r\n    super();\r\n    this.state={\r\n        hosts:{},\r\n        services:{},\r\n        loading: true,\r\n        failed: false,\r\n        error:null,\r\n      }\r\n      this.getData = this.getData.bind(this);\r\n    }\r\n\r\n    getData() {\r\n      axios\r\n        .get(`${API_URL}`)\r\n        .then(response => this.setState({\r\n              hosts: response.data.hosts, \r\n              services: response.data.services,\r\n              loading:false,\r\n              failed: false}))\r\n        .catch(error => this.setState({ error, loading: false, failed: true}));\r\n    }\r\n\r\ncomponentDidMount() {\r\n  this.getData()\r\n  setInterval(this.getData, 2000)\r\n}\r\n\r\n  render(){\r\n    const data = Object.keys(this.state.hosts).map((key) => (\r\n        \r\n      this.state.hosts[key].state_type == 1 ?(\r\n        <ServerCard \r\n          color='green'\r\n          host_data={this.state.hosts[key]}\r\n          services_data={this.state.services[key]}\r\n          hostname={this.state.hosts[key].host_name}\r\n          plugin_output={this.state.hosts[key].plugin_output}\r\n          state='UP'\r\n          />\r\n          \r\n        \r\n      ):\r\n      (\r\n        <ServerCard \r\n          color='red'\r\n          host_data={this.state.hosts[key]}\r\n          services_data={this.state.services[key]}\r\n          hostname={this.state.hosts[key].host_name}\r\n          plugin_output={this.state.hosts[key].plugin_output}\r\n          state='DOWN'\r\n          />\r\n      )\r\n  ));\r\n\r\n  var d1 = Object.keys(data).map(function(key) {\r\n    return <Grid.Column value={key}>{data[key]}</Grid.Column>\r\n  });\r\n    \r\n  if(this.state.failed)\r\n  {\r\n    return(\r\n      <Grid padded columns='equal'>\r\n        <Grid.Column></Grid.Column>\r\n        <Grid.Column>\r\n          <Message negative>\r\n            <Message.Header><Icon name='warning'/> Sorry unable to fetch data</Message.Header>\r\n          </Message>\r\n        </Grid.Column>\r\n        <Grid.Column></Grid.Column>\r\n      </Grid>\r\n      \r\n    );\r\n  }\r\n  else{\r\n    return(\r\n      \r\n      this.state.loading?(\r\n        <Message icon>\r\n          <Icon name='circle notched' loading />\r\n          <Message.Content>\r\n            <Message.Header>Just one second</Message.Header>\r\n            Fetching the data....\r\n          </Message.Content>\r\n        </Message>\r\n      ):(\r\n           <Grid stackable padded columns={3}>\r\n                {d1}\r\n            </Grid>\r\n      )\r\n      \r\n      );\r\n  }\r\n    }\r\n  }  \r\n  export default Hosts;","import React from 'react';\r\nimport {Card,Label,Table,Modal} from 'semantic-ui-react';\r\n\r\nlet iframe_url=\"http://3.225.245.176:3000/dashboard-solo/script/histou.js?orgId=1&host=freebsd&service=Load%20average&refresh=30s&from=1581207201734&to=1581236001734&panelId=1\";\r\nlet service_desc=\"\";\r\nconst ServerNameCard = props => {\r\n  const services = props.services_data;\r\n        const data = Object.keys(services).map((key) => (\r\n            service_desc=services[key].service_description,\r\n            service_desc=service_desc.split(' ').join('%20'),\r\n            iframe_url=\"http://3.225.245.176:3000/dashboard-solo/script/histou.js?orgId=1&host=\"+services[key].host_name+\"&service=\"+service_desc+\"&refresh=30s&from=1581207201734&to=1581236001734&panelId=1\",\r\n            \r\n                <iframe src={iframe_url} width=\"450\" height=\"200\" frameborder=\"0\"></iframe>\r\n            \r\n\r\n            ));\r\n\r\n    return(\r\n        \r\n\r\n        <Modal\r\n            trigger={\r\n              <Card color={props.color} href>\r\n                <Card.Content>\r\n                  <Card.Header>{props.hostname}</Card.Header>\r\n                  \r\n                  </Card.Content>\r\n                  <Card.Content extra>\r\n                    <Label color={props.color} circular floating>\r\n                        {props.state}\r\n                    </Label>\r\n                </Card.Content>\r\n            </Card>\r\n            }\r\n            header={props.hostname}\r\n            content={\r\n                <div >\r\n                    {data}\r\n               </div>\r\n            }\r\n            actions={[{ key: 'done', content: 'Done', positive: true }]}\r\n          />\r\n        \r\n        \r\n    );\r\n}\r\n\r\nexport default ServerNameCard;","\r\nimport React, { Component } from 'react';\r\nimport axios from 'axios';\r\nimport {Message,Grid,Icon } from 'semantic-ui-react';\r\nimport ServerNameCard from './ServerNameCard';\r\n\r\n//const API_URL = 'http://3.225.245.176/status.php';\r\nconst API_URL = 'https://rohit1727.github.io/server_log/status.json';\r\nconst AuthStr = 'Bearer eyJrIjoiT1hjbDl5TnFQaXRGNzNDYjZjSHozR09qQUhUOTZDM1EiLCJuIjoibmFnaW9zIiwiaWQiOjF9';\r\n\r\nclass Services extends Component{\r\n  constructor(){\r\n    super();\r\n    this.state={\r\n        hosts:{},\r\n        services:{},\r\n        loading: true,\r\n        failed: false,\r\n        error:null,\r\n      }\r\n      this.getData = this.getData.bind(this);\r\n    }\r\n\r\n    getData() {\r\n      axios\r\n        .get(`${API_URL}`)\r\n        .then(response => this.setState({\r\n              hosts: response.data.hosts, \r\n              services: response.data.services,\r\n              loading:false,\r\n              failed: false}))\r\n        .catch(error => this.setState({ error, loading: false, failed: true}));\r\n    }\r\n\r\ncomponentDidMount() {\r\n  this.getData()\r\n  setInterval(this.getData, 2000)\r\n}\r\n\r\n  render(){\r\n    const data = Object.keys(this.state.hosts).map((key) => (\r\n        \r\n      this.state.hosts[key].state_type == 1 ?(\r\n        <ServerNameCard \r\n          color='green'\r\n          host_data={this.state.hosts[key]}\r\n          services_data={this.state.services[key]}\r\n          hostname={this.state.hosts[key].host_name}\r\n          plugin_output={this.state.hosts[key].plugin_output}\r\n          state='UP'\r\n          />\r\n          \r\n        \r\n      ):\r\n      (\r\n        <ServerNameCard \r\n          color='red'\r\n          host_data={this.state.hosts[key]}\r\n          services_data={this.state.services[key]}\r\n          hostname={this.state.hosts[key].host_name}\r\n          plugin_output={this.state.hosts[key].plugin_output}\r\n          state='DOWN'\r\n          />\r\n      )\r\n  ));\r\n\r\n  var d1 = Object.keys(data).map(function(key) {\r\n    return <Grid.Column value={key}>{data[key]}</Grid.Column>\r\n  });\r\n    \r\n  if(this.state.failed)\r\n  {\r\n    return(\r\n      <Grid padded columns='equal'>\r\n        <Grid.Column></Grid.Column>\r\n        <Grid.Column>\r\n          <Message negative>\r\n            <Message.Header><Icon name='warning'/> Sorry unable to fetch data</Message.Header>\r\n          </Message>\r\n        </Grid.Column>\r\n        <Grid.Column></Grid.Column>\r\n      </Grid>\r\n      \r\n    );\r\n  }\r\n  else{\r\n    return(\r\n      \r\n      this.state.loading?(\r\n        <Message icon>\r\n          <Icon name='circle notched' loading />\r\n          <Message.Content>\r\n            <Message.Header>Just one second</Message.Header>\r\n            Fetching the data....\r\n          </Message.Content>\r\n        </Message>\r\n      ):(\r\n           <Grid stackable padded columns={3}>\r\n                {d1}\r\n            </Grid>\r\n      )\r\n      \r\n      );\r\n  }\r\n    }\r\n  }  \r\n  export default Services;","import React, { Component } from 'react';\r\nclass Analytics extends Component{\r\n    render(){\r\n        return(\r\n            <div>\r\n                <h1>Analytics Page</h1>\r\n                \r\n            </div>\r\n        );\r\n    }\r\n}\r\nexport default Analytics;","import React, { Component } from 'react';\r\nclass About extends Component{\r\n    render(){\r\n        return(\r\n            <div>\r\n                <h1>About Page</h1>\r\n            </div>\r\n        );\r\n    }\r\n}\r\nexport default About;","import React, { Component } from 'react';\r\nimport {NavLink} from 'react-router-dom';\r\nimport {Grid,Table,Menu,Sidebar,Icon} from 'semantic-ui-react';\r\nimport DashSidebar from './DashSidebar';\r\n\r\nclass ServerDetails extends Component{\r\n    \r\n    render(){       \r\n        const services =this.props.location.state.services_data;\r\n        const data = Object.keys(services).map((key) => (\r\n            \r\n            <Table.Row>\r\n                <Table.Cell>{key}</Table.Cell>\r\n                <Table.Cell>{services[key].plugin_output}</Table.Cell>\r\n            </Table.Row>\r\n            ));\r\n\r\n        return(\r\n            <Grid columns='equal' style={{height: '100vh'}}>\r\n                <Grid.Column>\r\n                    \r\n                </Grid.Column>\r\n                <Grid.Column width={8}>\r\n                <Table celled striped>\r\n                    <Table.Header>\r\n                        <Table.Row>\r\n                            <Table.HeaderCell colSpan='3'>\r\n                                {this.props.location.state.host_data.host_name} Services\r\n                            </Table.HeaderCell>\r\n                        </Table.Row>\r\n                        {data}\r\n                    </Table.Header>\r\n                    <Table.Body>\r\n                        \r\n                    </Table.Body>\r\n                </Table>\r\n                </Grid.Column>\r\n                <Grid.Column></Grid.Column>\r\n            </Grid>\r\n        );\r\n    }\r\n}\r\nexport default ServerDetails;","import React, { Component } from 'react';\nimport Navbar from './components/Navbar';\nimport {HashRouter,Route,Switch} from 'react-router-dom';\nimport Home from './components/Home';\nimport Hosts from './components/Hosts';\nimport Services from './components/Services';\nimport Analytics from './components/Analytics';\nimport About from './components/About';\nimport ServerDetails from './components/ServerDetails';\n\nclass App extends Component {\n  render() {\n    return (\n      <HashRouter>\n      <div className=\"App\">\n        <Navbar/>\n        <Switch>\n          <Route exact path=\"/\" component={Home}/>\n          <Route path=\"/hosts\" component={Hosts}/>\n          <Route path=\"/services\" component={Services}/>\n          <Route path=\"/analytics\" component={Analytics}/>\n          <Route path=\"/about\" component={About}/>\n          <Route path=\"/serverdetails\" component={ServerDetails}/>\n        </Switch>\n      </div>\n      </HashRouter>\n    );\n  }\n}\nexport default App;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport 'semantic-ui-css/semantic.min.css';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\n//serviceWorker.unregister();\n"],"sourceRoot":""}